services:
  app:
    container_name: "api"
    env_file: .env
    build:
      context: .
      target: dev
      dockerfile: Dockerfile
    ports:
      - "3000:${PORT}"
    tty: true
    volumes:
      - ".:/app:delegated"
      - "api_node_modules:/app/node_modules"
    links:
      - database
      - redis
    depends_on:
      database:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks:
      - starter

  database:
    image: "postgres:17.4-bookworm"
    container_name: db
    env_file: ".env"
    environment:
      POSTGRES_PASSWORD: ${DB_ROOT_PASSWORD}
      POSTGRES_DB: ${DB_NAME}
      POSTGRES_USER: ${DB_USER}
    ports:
      - 5432:5432
    expose:
      - "5432"
    volumes:
      - "db_data:/var/lib/postgresql/data"
    healthcheck:
      test: ["CMD", "pg_isready", "-q", "-d", "${DB_NAME}", "-U", "${DB_USER}"]
      interval: 10s
      timeout: 10s
      retries: 3
    networks:
      - starter

  redis:
    image: "redis:alpine"
    container_name: "redis"
    expose:
      - "6379"
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 3
    networks:
      - starter

volumes:
  db_data:
  api_node_modules:

networks:
  starter:
    # external: true
